---
描述：根据新出现的代码模式和最佳实践，持续改进光标规则的指南。
模式匹配：**/*
始终应用：true
---

- **规则改进触发条件**：
  - 新的代码模式未被现有规则覆盖
  - 在多个文件中反复出现类似的实现
  - 可以预防的常见错误模式
  - 持续使用的新的库或工具
  - 代码库中出现新的最佳实践

- **分析流程**：
  - 将新代码与现有规则进行比较
  - 确定应标准化的模式
  - 查找对外部文档的引用
  - 检查一致的错误处理模式
  - 监控测试模式和覆盖率

- **规则更新**：
  - **添加新规则的时机**：
    - 某一新技术/模式在3个或更多文件中使用
    - 可以通过规则预防常见错误
    - 代码审查反复提到相同的反馈
    - 出现新的安全或性能模式

  - **修改现有规则的时机**：
    - 代码库中存在更好的示例
    - 发现了额外的边缘情况
    - 相关规则已更新
    - 实现细节发生了变化

- **示例模式识别**：
  ```typescript
  // 如果你看到类似的重复模式：
  const data = await prisma.user.findMany({
    select: { id: true, email: true },
    where: { status: 'ACTIVE' }
  });
  
  // 考虑添加到[prisma.mdc](mdc:.cursor/rules/prisma.mdc)：
  // - 标准的select字段
  // - 常见的where条件
  // - 性能优化模式
  ```

- **规则质量检查**：
  - 规则应具有可操作性和具体性
  - 示例应来自实际代码
  - 引用应保持最新
  - 模式应始终如一地执行

- **持续改进**：
  - 监控代码审查评论
  - 跟踪常见的开发问题
  - 在重大重构后更新规则
  - 添加相关文档的链接
  - 交叉引用相关规则

- **规则弃用**：
  - 标记过时的模式为已弃用
  - 移除不再适用的规则
  - 更新对已弃用规则的引用
  - 为旧模式记录迁移路径

- **文档更新**：
  - 保持示例与代码同步
  - 更新对外部文档的引用
  - 维护相关规则之间的链接
  - 记录破坏性变更
遵循[cursor_rules.mdc](mdc:.cursor/rules/cursor_rules.mdc)以确保规则的格式和结构正确。